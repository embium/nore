/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as McpServersImport } from './routes/mcp-servers'
import { Route as ChatImport } from './routes/chat'
import { Route as IndexImport } from './routes/index'
import { Route as McpServersIndexImport } from './routes/mcp-servers/index'
import { Route as ChatIndexImport } from './routes/chat/index'
import { Route as McpServersRegistryImport } from './routes/mcp-servers/registry'
import { Route as McpServersServerIdImport } from './routes/mcp-servers/$serverId'

// Create/Update Routes

const McpServersRoute = McpServersImport.update({
  id: '/mcp-servers',
  path: '/mcp-servers',
  getParentRoute: () => rootRoute,
} as any)

const ChatRoute = ChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const McpServersIndexRoute = McpServersIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => McpServersRoute,
} as any)

const ChatIndexRoute = ChatIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)

const McpServersRegistryRoute = McpServersRegistryImport.update({
  id: '/registry',
  path: '/registry',
  getParentRoute: () => McpServersRoute,
} as any)

const McpServersServerIdRoute = McpServersServerIdImport.update({
  id: '/$serverId',
  path: '/$serverId',
  getParentRoute: () => McpServersRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatImport
      parentRoute: typeof rootRoute
    }
    '/mcp-servers': {
      id: '/mcp-servers'
      path: '/mcp-servers'
      fullPath: '/mcp-servers'
      preLoaderRoute: typeof McpServersImport
      parentRoute: typeof rootRoute
    }
    '/mcp-servers/$serverId': {
      id: '/mcp-servers/$serverId'
      path: '/$serverId'
      fullPath: '/mcp-servers/$serverId'
      preLoaderRoute: typeof McpServersServerIdImport
      parentRoute: typeof McpServersImport
    }
    '/mcp-servers/registry': {
      id: '/mcp-servers/registry'
      path: '/registry'
      fullPath: '/mcp-servers/registry'
      preLoaderRoute: typeof McpServersRegistryImport
      parentRoute: typeof McpServersImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexImport
      parentRoute: typeof ChatImport
    }
    '/mcp-servers/': {
      id: '/mcp-servers/'
      path: '/'
      fullPath: '/mcp-servers/'
      preLoaderRoute: typeof McpServersIndexImport
      parentRoute: typeof McpServersImport
    }
  }
}

// Create and export the route tree

interface ChatRouteChildren {
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

interface McpServersRouteChildren {
  McpServersServerIdRoute: typeof McpServersServerIdRoute
  McpServersRegistryRoute: typeof McpServersRegistryRoute
  McpServersIndexRoute: typeof McpServersIndexRoute
}

const McpServersRouteChildren: McpServersRouteChildren = {
  McpServersServerIdRoute: McpServersServerIdRoute,
  McpServersRegistryRoute: McpServersRegistryRoute,
  McpServersIndexRoute: McpServersIndexRoute,
}

const McpServersRouteWithChildren = McpServersRoute._addFileChildren(
  McpServersRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/mcp-servers': typeof McpServersRouteWithChildren
  '/mcp-servers/$serverId': typeof McpServersServerIdRoute
  '/mcp-servers/registry': typeof McpServersRegistryRoute
  '/chat/': typeof ChatIndexRoute
  '/mcp-servers/': typeof McpServersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mcp-servers/$serverId': typeof McpServersServerIdRoute
  '/mcp-servers/registry': typeof McpServersRegistryRoute
  '/chat': typeof ChatIndexRoute
  '/mcp-servers': typeof McpServersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/chat': typeof ChatRouteWithChildren
  '/mcp-servers': typeof McpServersRouteWithChildren
  '/mcp-servers/$serverId': typeof McpServersServerIdRoute
  '/mcp-servers/registry': typeof McpServersRegistryRoute
  '/chat/': typeof ChatIndexRoute
  '/mcp-servers/': typeof McpServersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/mcp-servers'
    | '/mcp-servers/$serverId'
    | '/mcp-servers/registry'
    | '/chat/'
    | '/mcp-servers/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/mcp-servers/$serverId'
    | '/mcp-servers/registry'
    | '/chat'
    | '/mcp-servers'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/mcp-servers'
    | '/mcp-servers/$serverId'
    | '/mcp-servers/registry'
    | '/chat/'
    | '/mcp-servers/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRouteWithChildren
  McpServersRoute: typeof McpServersRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRouteWithChildren,
  McpServersRoute: McpServersRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/chat",
        "/mcp-servers"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/chat": {
      "filePath": "chat.tsx",
      "children": [
        "/chat/"
      ]
    },
    "/mcp-servers": {
      "filePath": "mcp-servers.tsx",
      "children": [
        "/mcp-servers/$serverId",
        "/mcp-servers/registry",
        "/mcp-servers/"
      ]
    },
    "/mcp-servers/$serverId": {
      "filePath": "mcp-servers/$serverId.tsx",
      "parent": "/mcp-servers"
    },
    "/mcp-servers/registry": {
      "filePath": "mcp-servers/registry.tsx",
      "parent": "/mcp-servers"
    },
    "/chat/": {
      "filePath": "chat/index.tsx",
      "parent": "/chat"
    },
    "/mcp-servers/": {
      "filePath": "mcp-servers/index.tsx",
      "parent": "/mcp-servers"
    }
  }
}
ROUTE_MANIFEST_END */
